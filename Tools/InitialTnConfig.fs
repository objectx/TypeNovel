namespace TypeNovel.Lib

module InitialTnConfig = begin
  let value = "{\n  \"warnDuplicateConstraint\": true,\n  \"warnUndefinedConstraint\": true,\n  \"warnUnannotatedConstraint\": true,\n  \"markupMap\": {\n    \"@pre\": {\n      \"whiteSpace\": \"pre\"\n    },\n    \"@scene\": {\n      \"tagName\": \"div\",\n      \"className\": \"<name> <arg2>\"\n    },\n    \"//\": \"[example]\",\n    \"//\": \"@speak('John'){ speech text here }\",\n    \"@speak\": {\n      \"tagName\": \"div\",\n      \"className\": \"speak\",\n      \"attributes\": {\n        \"data-character\": \"<arg1>\"\n      }\n    },\n    \"//\": \"[example]\",\n    \"//\": \"Inspired by Machi@notes(){ By Chunsoft@1998 }\",\n    \"@notes\": {\n      \"tagName\": \"span\",\n      \"className\": \"<name>\",\n      \"validate\": false\n    },\n    \"//\": \"[example]\",\n    \"//\": \"@tip('IMO'){ 'In my opinion' }, it's correct.\",\n    \"@tip\": {\n      \"tagName\": \"span\",\n      \"className\": \"<name>\",\n      \"validate\": false,\n      \"attributes\": {\n        \"title\": \"<arg1>\"\n      }\n    },\n    \"//\": \"[example]\",\n    \"//\": \"$ruby('\u6f22\u5b57', '\u304b\u3093\u3058')\",\n    \"$ruby\": {\n      \"validate\": false,\n      \"content\": \"<arg1><rt><arg2></rt>\"\n    },\n    \"$br\": {\n      \"validate\": false,\n      \"selfClosing\": true\n    },\n    \"@hr\": {\n      \"validate\": false,\n      \"selfClosing\": true\n    },\n    \"$img\": {\n      \"validate\": false,\n      \"selfClosing\": true,\n      \"attributes\": {\n        \"src\": \"<arg1>\"\n      }\n    },\n    \"$img-wh\": {\n      \"tagName\": \"img\",\n      \"validate\": false,\n      \"selfClosing\": true,\n      \"attributes\": {\n        \"src\": \"<arg1>\",\n        \"width\": \"<arg2>\",\n        \"height\": \"<arg3>\"\n      }\n    },\n    \"$a\": {\n      \"validate\": false,\n      \"attributes\": {\n\t\"href\": \"<arg1>\"\n      }\n    },\n    \"$fdot\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha filled dot\",\n      \"validate\": false\n    },\n    \"$odot\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha open dot\",\n      \"validate\": false\n    },\n    \"$fcircle\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha filled circle\",\n      \"validate\": false\n    },\n    \"$ocircle\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha open circle\",\n      \"validate\": false\n    },\n    \"$ftriangle\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha filled triangle\",\n      \"validate\": false\n    },\n    \"$otriangle\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha open triangle\",\n      \"validate\": false\n    },\n    \"$fdcircle\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha filled double circle\",\n      \"validate\": false\n    },\n    \"$odcircle\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha open double circle\",\n      \"validate\": false\n    },\n    \"$fsesame\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha filled sesame\",\n      \"validate\": false\n    },\n    \"$osesame\": {\n      \"tagName\": \"span\",\n      \"className\": \"empha open sesame\",\n      \"validate\": false\n    },\n    \"//\": \"[example]\",\n    \"//\": \"$icon('calendar outline')\",\n    \"$icon\": {\n      \"tagName\": \"<name>\",\n      \"className\": \"<arg1>\",\n      \"content\": \"\",\n      \"validate\": false\n    }\n  }\n}\n"
end
